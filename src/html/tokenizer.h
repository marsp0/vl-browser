#pragma once

#include <stdint.h>
#include <stdbool.h>

#define HTML_TOKEN_MAX_NAME_LEN     64
#define HTML_TOKEN_MAX_ATTRIBUTES   5

// https://html.spec.whatwg.org/multipage/parsing.html#tokenization
typedef enum
{
    HTML_TOKENIZER_DATA_STATE,
    HTML_TOKENIZER_RCDATA_STATE,
    HTML_TOKENIZER_RAWTEXT_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_STATE,
    HTML_TOKENIZER_PLAINTEXT_STATE,
    HTML_TOKENIZER_TAG_OPEN_STATE,
    HTML_TOKENIZER_END_TAG_OPEN_STATE,
    HTML_TOKENIZER_TAG_NAME_STATE,
    HTML_TOKENIZER_RCDATA_LESS_THAN_STATE,
    HTML_TOKENIZER_RCDATA_END_TAG_OPEN_STATE,
    HTML_TOKENIZER_RCDATA_END_TAG_NAME_STATE,
    HTML_TOKENIZER_RAWTEXT_LESS_THAN_STATE,
    HTML_TOKENIZER_RAWTEXT_END_TAG_OPEN_STATE,
    HTML_TOKENIZER_RAWTEXT_END_TAG_NAME_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_LESS_THAN_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_END_TAG_OPEN_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_END_TAG_NAME_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPE_START_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPE_START_DASH_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_DASH_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_DASH_DASH_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_LESS_THAN_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPED_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_STATE,
    HTML_TOKENIZER_SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE,
    HTML_TOKENIZER_BEFORE_ATTRIBUTE_NAME_STATE,
    HTML_TOKENIZER_ATTRIBUTE_NAME_STATE,
    HTML_TOKENIZER_AFTER_ATTRIBUTE_NAME_STATE,
    HTML_TOKENIZER_BEFORE_ATTRIBUTE_VALUE_STATE,
    HTML_TOKENIZER_ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE,
    HTML_TOKENIZER_ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE,
    HTML_TOKENIZER_ATTRIBUTE_VALUE_UNQUOTED_STATE,
    HTML_TOKENIZER_AFTER_ATTRIBUTE_VALUE_QUOTED_STATE,
    HTML_TOKENIZER_SELF_CLOSING_START_TAG_STATE,
    HTML_TOKENIZER_BOGUS_COMMENT_STATE,
    HTML_TOKENIZER_MARKUP_DECLARATION_OPEN_STATE,
    HTML_TOKENIZER_COMMENT_START_STATE,
    HTML_TOKENIZER_COMMENT_START_DASH_STATE,
    HTML_TOKENIZER_COMMENT_STATE,
    HTML_TOKENIZER_COMMENT_LESS_THAN_STATE,
    HTML_TOKENIZER_COMMENT_LESS_THAN_BANG_STATE,
    HTML_TOKENIZER_COMMENT_LESS_THAN_BANG_DASH_STATE,
    HTML_TOKENIZER_COMMENT_LESS_THAN_BANG_DASH_DASH_STATE,
    HTML_TOKENIZER_COMMENT_END_DASH_STATE,
    HTML_TOKENIZER_COMMENT_END_STATE,
    HTML_TOKENIZER_COMMENT_END_BANG_STATE,
    HTML_TOKENIZER_DOCTYPE_STATE,
    HTML_TOKENIZER_BEFORE_DOCTYPE_NAME_STATE,
    HTML_TOKENIZER_DOCTYPE_NAME_STATE,
    HTML_TOKENIZER_AFTER_DOCTYPE_NAME_STATE,
    HTML_TOKENIZER_AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE,
    HTML_TOKENIZER_BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE,
    HTML_TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE,
    HTML_TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE,
    HTML_TOKENIZER_AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE,
    HTML_TOKENIZER_BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE,
    HTML_TOKENIZER_AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE,
    HTML_TOKENIZER_BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE,
    HTML_TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE,
    HTML_TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE,
    HTML_TOKENIZER_AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE,
    HTML_TOKENIZER_BOGUS_DOCTYPE_STATE,
    HTML_TOKENIZER_CDATA_SECTION_STATE,
    HTML_TOKENIZER_CDATA_SECTION_BRACKET_STATE,
    HTML_TOKENIZER_CDATA_SECTION_END_STATE,
    HTML_TOKENIZER_CHARACTER_REFERENCE_STATE,
    HTML_TOKENIZER_NAMED_CHARACTER_REFERENCE_STATE,
    HTML_TOKENIZER_AMBIGUOUS_AMPERSAND_STATE,
    HTML_TOKENIZER_NUMERIC_CHARACTER_REFERENCE_STATE,
    HTML_TOKENIZER_HEXADECIMAL_CHARACTER_REFERENCE_START_STATE,
    HTML_TOKENIZER_DECIMAL_CHARACTER_REFERENCE_START_STATE,
    HTML_TOKENIZER_HEXADECIMAL_CHARACTER_REFERENCE_STATE,
    HTML_TOKENIZER_DECIMAL_CHARACTER_REFERENCE_STATE,
    HTML_TOKENIZER_NUMERIC_CHARACTER_REFERENCE_END_STATE
} html_tokenizer_state_e;

typedef enum
{
    HTML_TOKENIZER_OK,
    HTML_TOKENIZER_ABRUPT_CLOSING_OF_EMPTY_COMMENT,
    HTML_TOKENIZER_ABRUPT_DOCTYPE_PUBLIC_IDENTIFIER,
    HTML_TOKENIZER_ABRUPT_DOCTYPE_SYSTEM_IDENTIFIER,
    HTML_TOKENIZER_ABSENCE_OF_DIGITS_IN_NUMERIC_CHARACTER_REFERENCE,
    HTML_TOKENIZER_CHARACTER_REFERENCE_OUTSIDE_UNICODE_RANGE,
    HTML_TOKENIZER_CONTROL_CHARACTER_REFERENCE,
    HTML_TOKENIZER_END_TAG_WITH_ATTRIBUTES,
    HTML_TOKENIZER_EOF_BEFORE_TAG_NAME,
    HTML_TOKENIZER_EOF_IN_COMMENT,
    HTML_TOKENIZER_EOF_IN_DOCTYPE,
    HTML_TOKENIZER_EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,

    HTML_TOKENIZER_DONE,
    HTML_TOKENIZER_INCORRECTLY_OPENED_COMMENT,
    HTML_TOKENIZER_MISSING_END_TAG_NAME,
    HTML_TOKENIZER_INVALID_FIRST_CHARACTER_OF_TAG_NAME,
    HTML_TOKENIZER_UNEXPECTED_NULL_CHARACTER,
    HTML_TOKENIZER_MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,
    HTML_TOKENIZER_DUPLICATE_ATTRIBUTE,
    HTML_TOKENIZER_NESTED_COMMENT,
    HTML_TOKENIZER_UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,
    HTML_TOKENIZER_MISSING_DOCTYPE_NAME,
    HTML_TOKENIZER_MISSING_WHITESPACE_BEFORE_DOCTYPE_NAME,
    HTML_TOKENIZER_NULL_CHARACTER_REFERENCE,
    HTML_TOKENIZER_SURROGATE_CHARACTER_REFERENCE,
    HTML_TOKENIZER_UNEXPECTED_SOLIDUS_IN_TAG,
    HTML_TOKENIZER_UNEXPECTED_QUOESTION_MARK_INSTEAD_OF_TAG_NAME,
    HTML_TOKENIZER_UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,
    HTML_TOKENIZER_EOF_IN_CDATA,
    HTML_TOKENIZER_ERROR

} html_tokenizer_error_e;

// https://html.spec.whatwg.org/multipage/parsing.html#tokenization
typedef enum
{
    HTML_DOCTYPE_TOKEN,
    HTML_START_TOKEN,
    HTML_END_TOKEN,
    HTML_COMMENT_TOKEN,
    HTML_CHARACTER_TOKEN,
    HTML_EOF_TOKEN

} html_token_type_e;

typedef struct
{
    unsigned char   name[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t        name_size;
    unsigned char   value[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t        value_size;

} html_token_attribute_t;

typedef struct
{
    bool                        is_valid;
    html_token_type_e           type;

    unsigned char               name[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t                    name_size;

    // DOCTYPE
    unsigned char               public_id[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t                    public_id_size;
    unsigned char               system_id[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t                    system_id_size;
    bool                        force_quirks;

    // start/end tags
    html_token_attribute_t      attributes[HTML_TOKEN_MAX_ATTRIBUTES];
    uint32_t                    attributes_size;
    bool                        self_closing;

    // comments and character tokens
    unsigned char               data[HTML_TOKEN_MAX_NAME_LEN];
    uint32_t                    data_size;

} html_token_t;

void                    html_tokenizer_init(const unsigned char* new_buffer, const uint32_t new_size, html_token_t* new_tokens, const uint32_t new_max_tokens);
void                    html_tokenizer_set_state(html_tokenizer_state_e new_state);
html_tokenizer_error_e  html_tokenizer_next();
void                    html_tokenizer_free();
